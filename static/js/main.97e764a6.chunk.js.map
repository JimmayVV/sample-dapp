{"version":3,"sources":["data/Vault.abi.js","components/pastTransactions.js","App.js","serviceWorker.js","index.js"],"names":["devAbi","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","devAddr","ethAddr","ethAbi","PastTransactions","state","events","lowestBlock","interval","componentDidMount","_this","retrieveEvents","setInterval","getDeposits","getWithdrawals","props","contract","Deposit","fromBlock","toBlock","get","err","results","flashError","processEvents","Withdraw","Array","isArray","length","_","findIndex","elem","blockNumber","setState","highestBlock","forEach","value","newEvents","uniqWith","Object","toConsumableArray","concat","isEqual","sort","a","b","_this2","this","slice","react_default","createElement","mdbreact","responsive","map","event","key","args","user","renderValue","amount","Component","validIds","App","isConnected","correctNetwork","currentAccount","vaultBalance","walletBalance","depositInput","withdrawInput","errors","success","networkId","validateInterval","errorTimeout","successTimeout","web3","undefined","window","version","getNetwork","validateNetwork","convertWeiToEth","fromWei","isNaN","val","valid","includes","newState","eth","accounts","abi","addr","contractInstance","at","getVaultBalance","getWalletBalance","balanceOf","balance","toNumber","getBalance","depositMoney","transactionObject","sender","deposit","result","flashSuccess","withdrawMoney","withdraw","message","clearTimeout","setTimeout","depositInputChange","e","target","validity","withdrawInputChange","Fragment","color","dark","expand","className","tag","right","nav","caret","header","divider","label","pattern","onChange","block","onClick","pastTransactions","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97e764a6.chunk.js","sourcesContent":["export const devAbi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"balance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Deposit\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Withdraw\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"user\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\nexport const devAddr = '0x08bb779f55b6b165349ca8e25645ab66fff3107f'\n\nexport const ethAddr = '0x3430D3FC79e35f33bb69c4a0B4b89bC9Ee107897'\n\nexport const ethAbi = [{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]\n\nexport default devAbi\n","import React, { Component } from 'react'\nimport { Table, TableBody, TableHead  } from 'mdbreact';\nimport _ from 'lodash'\n\nclass PastTransactions extends Component {\n  state = {\n    events: [],\n    lowestBlock: 0\n  }\n\n  interval = null // We want to regularly retrieve the most recent events, and the interval will be set here\n\n  componentDidMount = () => {\n    this.retrieveEvents()\n    this.interval = setInterval(this.retrieveEvents, 5000)\n    // Sort array\n  }\n\n  retrieveEvents = () => {\n    this.getDeposits()\n    this.getWithdrawals()\n  }\n\n  getDeposits = () => {\n    this.props.contract.Deposit({}, { fromBlock: this.state.lowestBlock, toBlock: 'latest' }).get((err, results) => {\n      if (err)\n        this.props.flashError('There was an error getting deposits. Please verify MetaMask is connected to the right network')\n      else {\n        // Process the retrieved deposits\n        this.processEvents(results)\n      }\n    })\n  }\n\n  getWithdrawals = () => {\n    this.props.contract.Withdraw({}, { fromBlock: this.state.lowestBlock, toBlock: 'latest' }).get((err, results) => {\n      if (err)\n        this.props.flashError('There was an error getting deposits. Please verify MetaMask is connected to the right network')\n      else {\n        // Process the retrieved withdrawals\n        this.processEvents(results)\n      }\n    })\n  }\n\n  processEvents = (events) => {\n    if (!Array.isArray(events) || events.length === 0) return // Verify that the results are a valid array, and have contents\n\n    // Don't process these events if there are only 1, and if it's already in the array\n    if (events.length === 1 && (/*events.blockNumber === this.state.lowestBlock || */_.findIndex(this.state.events, elem => { return elem.blockNumber === events[0].blockNumber }) >= 0)) return\n\n    this.setState(state => {\n      let highestBlock = state.lowestBlock\n\n      events.forEach(value => {\n        if (value.blockNumber > highestBlock) highestBlock = value.blockNumber\n      })\n\n      // Extra check to make sure there are no dupes\n      const newEvents = _.uniqWith([...state.events, ...events], _.isEqual)\n\n      newEvents.sort((a, b) => {\n        // Reverse sort the array, so the most recent event is in elem 0\n        return b.blockNumber - a.blockNumber\n      })\n\n      return {\n        lowestBlock: highestBlock,\n        events: newEvents\n      }\n    })\n  }\n\n  render() {\n    const events = this.state.events.slice(0, 10)\n\n    return (\n      <Table responsive>\n        <TableHead>\n          <tr>\n            <th>Block #</th>\n            <th>Event Type</th>\n            <th>User</th>\n            <th>Amount</th>\n          </tr>\n        </TableHead>\n        <TableBody>\n          {\n            events.map(event => (\n              <tr key={`Events${event.blockNumber}`}>\n                <td>{event.blockNumber}</td>\n                <td>{event.event}</td>\n                <td>{event.args.user}</td>\n                <td>{this.props.renderValue(event.args.amount)}</td>\n              </tr>\n            ))\n          }\n        </TableBody>\n      </Table>\n    )\n  }\n}\n\nexport default PastTransactions\n","import React, { Component } from 'react'\nimport {\n  Navbar, NavbarBrand, NavbarNav,\n  Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n  Card, CardBody,\n  Input, Button\n} from 'mdbreact';\n// import Web3 from 'web3' // Note, downgraded to web3 0.20.6 due to cors issue - see https://github.com/ethereum/web3.js/issues/1802\nimport { devAbi, devAddr, ethAbi, ethAddr } from './data/Vault.abi'\n\nimport './App.css'\nimport PastTransactions from './components/pastTransactions'\n\n// const API_TOKEN = 'CF6972FQAGZ53HK5ICNM6NVJVQMTR3JZ7B'\n\n// Kovan network ID is 42, which is what the proper smart contract is on\n// Our test blockchain is id 5777, which is what we will check for in development.\nconst validIds = [\"42\", \"5777\"] // const validIds = [\"42\", \"5777\"];\n\nclass App extends Component {\n  state = {\n    isConnected: false,\n    correctNetwork: false,\n    currentAccount: null,\n    vaultBalance: null,\n    walletBalance: null,\n    depositInput: '',\n    withdrawInput: '',\n    errors: null,\n    success: null,\n    // lowestBlock: 0,\n    // events: [],\n    networkId: null,  // Not needed in final version, just keeping track of it for dev purposes - the validIds const will take care of validation\n  }\n\n  validateInterval = null  // We will keep polling web3 to validate that the connection is still active and open\n\n  // Error and success timeouts to flash messages to the user with\n  errorTimeout = null\n  successTimeout = null\n\n  web3 = undefined  // The local interface to the web3 object provided by MetaMask. We could connect to the Vault manually with our own\n                    // web3 instance, however, we still would require MetaMask to connect to that network, so we might as well use the\n                    // free web3 instance MetaMask gives us, and validate off of that\n\n  contract = undefined  // We will house our actual JS interface to the smart contract here\n\n  //depositRef = React.createRef()  // A ref to the deposit amount input\n  //withdrawRef = React.createRef() // A ref to the withdraw amount input\n\n  componentDidMount = () => {\n    // When the component mounts, verify MetaMask is configured correctly (it is assumed to be running)\n    if (window.web3 !== undefined) {\n      // this.web3 = new Web3(window.web3.currentProvider)\n      this.web3 = window.web3;\n    }\n\n    // Validate that web3 has been set properly, and then validate that the network is configured correctly\n    if (this.web3 && this.web3.isConnected()) {\n      this.setState({ isConnected: true })\n      this.web3.version.getNetwork(this.validateNetwork)\n\n      // Unfortunately, per MetaMask's api documentation, they currently recommend that we set an interval to poll\n      // web3 to make sure important data is still the same\n      this.validateInterval = setInterval(() => {\n        this.web3.version.getNetwork(this.validateNetwork)\n      }, 100)\n    }\n  }\n\n  convertWeiToEth = (value) => {\n    if (!value || !this.web3) return\n\n    return this.web3.fromWei(value, \"ether\")\n  }\n\n  renderValue = (value) => {\n    if (isNaN(value)) value = 0\n    if (value < 100000) return value + ' WEI'\n    return this.convertWeiToEth(value) + ' ETH'\n  }\n\n  validateNetwork = (err, val) => {\n    if (err) {\n      throw(err)\n    } else {\n      // First validation is to make sure that the address id is correct (see declaration above for the logic)\n      const valid = validIds.includes(val)\n\n      const newState = {\n        correctNetwork: valid,\n        networkId: val,\n        currentAccount: this.web3.eth.accounts[0]\n      }\n\n      // Now if the network id is valid, parse the contract through Web3 so we can utilize it with vanilla JS\n      if (valid) {\n        const abi = (val === \"42\") ? ethAbi : devAbi\n        const addr = (val === \"42\") ? ethAddr : devAddr\n        // The contract abi is needed first\n        const contract = this.web3.eth.contract(abi)\n        // Now we need to set the address\n        const contractInstance = contract.at(addr)\n\n        // Get the current blaances of the wallet and vault\n        this.getVaultBalance()\n        this.getWalletBalance()\n\n        // And finally, set the contract to this component so that we can use it\n        this.contract = contractInstance\n      } else {\n        this.contract = null  // In case this was previously set, we need to unset it\n\n        // Add new state variables to reset the vault and wallet balance (in addition the state set above)\n        newState.vaultBalance = null\n        newState.walletBalance = null\n      }\n\n      this.setState(newState)\n    }\n  }\n\n  getVaultBalance = () => {\n    if (!this.web3 || !this.contract) return\n\n    const contract = this.contract;\n    const { currentAccount } = this.state\n\n    contract.balanceOf(currentAccount, (err, balance) => {\n      if (err) this.flashError('Error: ' + err)\n      this.setState({ vaultBalance: balance.toNumber() })\n    })\n  }\n\n  getWalletBalance = () => {\n    if (!this.web3 || !this.contract) return\n\n    const { currentAccount } = this.state\n\n    this.web3.eth.getBalance(currentAccount, (err, balance) => {\n      if (err) this.flashError('Error: ' + err)\n      this.setState({ walletBalance: balance.toNumber() })\n    })\n  }\n\n  depositMoney = () => {\n    const amount = this.state.depositInput\n\n    if (!this.web3 || !this.contract || !amount) {\n      this.flashError('Deposit failed')\n      return\n    }\n\n    const { currentAccount } = this.state\n\n    const transactionObject = {\n      sender: currentAccount,\n      value: amount\n    }\n\n    this.contract.deposit(transactionObject, (err, result) => {\n      if (!err) {\n        this.flashSuccess(`Successfully deposited ${this.renderValue(amount)} to the vault! Confirmation: ${result}`)\n        this.setState({depositInput: ''})\n      }\n    })\n  }\n\n  withdrawMoney = () => {\n    const amount = this.state.withdrawInput\n\n    if (!this.web3 || !this.contract || !amount) {\n      this.flashError('Withdraw failed')\n      return\n    }\n\n    const { currentAccount } = this.state\n\n    const transactionObject = {\n      sender: currentAccount,\n    }\n\n    this.contract.withdraw(amount, transactionObject, (err, result) => {\n      if (!err) this.flashSuccess(`Successfully withdrew ${this.renderValue(amount)} from the vault! Confirmation: ${result}`)\n      else this.flashError('There was an error withdrawing funds from your vault. Please verify there are sufficient funds')\n      this.setState({withdrawInput: ''})\n    })\n  }\n\n  flashError = (message) => {\n    // If there was a previous error message, wipe out the timeout, so we can start the clock on a new error\n    clearTimeout(this.errorTimeout)\n    // Set the error message\n    this.setState({ errors: message })\n    // After 10 seconds, wipe out the error\n    this.errorTimeout = setTimeout(() => {this.setState({errors: null})}, 10000)\n  }\n\n  flashSuccess = (message) => {\n    // If there was a previous error message, wipe out the timeout, so we can start the clock on a new error\n    clearTimeout(this.successTimeout)\n    // Set the error message\n    this.setState({ success: message })\n    // After 10 seconds, wipe out the error\n    this.successTimeout = setTimeout(() => {this.setState({success: null})}, 10000)\n  }\n\n  depositInputChange = (e) => {\n    const amount = e.target.value\n\n    const valid = e.target.validity.valid\n\n    if (!valid) return\n\n    this.setState({\n      depositInput: amount\n    })\n  }\n\n  withdrawInputChange = (e) => {\n    const amount = e.target.value\n\n    const valid = e.target.validity.valid\n\n    if (!valid) return\n\n    this.setState({\n      withdrawInput: amount\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar color=\"indigo\" dark expand=\"md\" className=\"mb-3\">\n          <NavbarBrand tag=\"span\">Sample Dapp</NavbarBrand>\n          <NavbarNav right>\n            <Dropdown>\n              <DropdownToggle nav caret>Network Status: {this.state.correctNetwork ? 'Successful!' : 'Unsuccessful'}</DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem header>Connected to Blockchain: {this.state.isConnected ? 'Yes' : 'No'}</DropdownItem>\n                <DropdownItem header>Kovan Testnet: {this.state.correctNetwork ? 'Yes' : 'No'}</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n            <Dropdown>\n              <DropdownToggle nav caret>Your Account</DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem header>Account Number:<br />{this.state.currentAccount}</DropdownItem>\n                <DropdownItem divider/>\n                <DropdownItem>Vault Balance: {this.renderValue(this.state.vaultBalance)}</DropdownItem>\n                <DropdownItem>Wallet Balance: {this.renderValue(this.state.walletBalance)}</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </NavbarNav>\n        </Navbar>\n\n        <div className=\"container pb-3\">\n          { this.state.errors && <div className=\"alert alert-danger\">{this.state.errors}</div> }\n          { this.state.success && <div className=\"alert alert-success\">{this.state.success}</div> }\n          \n          {(!this.state.correctNetwork || this.web3 === undefined) &&\n            <Card>\n              <CardBody>\n                Please check your configuration to ensure that MetaMask is configured properly, and is connected to the Kovan network\n              </CardBody>\n            </Card>\n          }\n\n          {this.state.correctNetwork &&\n            <>\n              <h2>Your vault</h2>\n              <Card>\n                <CardBody>\n                  <div className=\"row mb-3\">\n                    <div className=\"col\"><h3>Your Vault Balance: <strong>{this.renderValue(this.state.vaultBalance)}</strong></h3></div>\n                    <div className=\"col\"><h3>Your Wallet Balance: <strong>{this.renderValue(this.state.walletBalance)}</strong></h3></div>\n                  </div>\n                  <div className=\"row\">\n\n                    <div className=\"col\">\n                      <h5>Deposit to your vault:</h5>\n                      <Input\n                        type=\"tel\"\n                        label=\"Amount to deposit\"\n                        pattern={'[0-9]*'}\n                        value={this.state.depositInput}\n                        onChange={this.depositInputChange}\n                      />\n                      <div className=\"row\">\n                        <div className=\"col\"><Button block color=\"primary\" onClick={this.depositMoney}>Deposit</Button></div>\n                        <div className=\"col\"><Button block color=\"danger\" onClick={() => this.setState({depositInput: ''})}>Clear</Button></div>\n                      </div>\n                    </div>\n\n                    <div className=\"col\">\n                      <h5>Withdraw from your vault:</h5>\n                      <Input\n                        type=\"tel\"\n                        label=\"Amount to deposit\"\n                        pattern={'[0-9]*'}\n                        value={this.state.withdrawInput}\n                        onChange={this.withdrawInputChange}\n                      />\n                      <div className=\"row\">\n                        <div className=\"col\"><Button block color=\"warning\" onClick={this.withdrawMoney}>Withdraw</Button></div>\n                        <div className=\"col\"><Button block color=\"danger\" onClick={() => this.setState({withdrawInput: ''})}>Clear</Button></div>\n                      </div>\n                    </div>\n                  </div>\n                </CardBody>\n              </Card>\n\n              <h2 className=\"mt-3\">Recent Transactions</h2>\n              <Card>\n                <CardBody>\n                  <PastTransactions\n                    contract={this.contract}\n                    flashSuccess={this.flashSuccess}\n                    flashError={this.flashError}\n                    renderValue={this.renderValue}\n                  />\n                </CardBody>\n              </Card>\n            </>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}